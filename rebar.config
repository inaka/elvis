%% == Compiler and Profiles ==

{erl_opts,
 [warn_unused_import, warn_export_vars, warnings_as_errors, verbose, report, debug_info]}.

{profiles,
 [{test,
   [{extra_src_dirs, [{"test/examples", [{recursive, true}]}]},
    {deps, [{mixer, "1.2.0", {pkg, inaka_mixer}}, {meck, "0.9.2"}]},
    {ct_opts, [{sys_config, ["./config/test.config"]}, {logdir, "./logs"}, {verbose, true}]},
    {cover_enabled, true},
    {cover_opts, [verbose]},
    {dialyzer,
     [{warnings, [no_return, unmatched_returns, error_handling, underspecs, unknown]},
      {plt_extra_apps, [meck, dialyzer, common_test, compiler]}]}]}]}.

{alias, [{test, [compile, format, hank, xref, dialyzer, ct, cover]}]}.

{escript_main_app, elvis}.

{escript_name, "elvis"}.

%% == Dependencies and plugins ==

{deps,
 [{elvis_core, {git, "https://github.com/inaka/elvis_core.git", {tag, "4.0.0-otp24"}}},
  {getopt, "1.0.3"},
  {egithub, "0.7.0"}]}.

{project_plugins,
 [{rebar3_hank, "~> 1.4.1"},
  {rebar3_hex, "~> 7.0.8"},
  {rebar3_format, "~> 1.3.0"},
  {rebar3_ex_doc, "~> 0.2.25"}]}.

%% == Documentation ==

{ex_doc,
 [{source_url, <<"https://github.com/inaka/elvis">>},
  {extras, [<<"README.md">>, <<"LICENSE">>]},
  {main, <<"README.md">>},
  {prefix_ref_vsn_with_v, false},
  {api_reference, false}]}.

{hex, [{doc, #{provider => ex_doc}}]}.

%% == Format ==

{format, [{files, ["*.config", "src/*", "test/**/*{.erl,.coverspec,.js,.fail}"]}]}.

%% == Dialyzer + XRef ==

{dialyzer,
 [{warnings, [no_return, unmatched_returns, error_handling, underspecs, unknown]}]}.

{xref_checks,
 [undefined_function_calls, deprecated_function_calls, deprecated_functions]}.

{xref_extra_paths, ["test/**"]}.
